Map 集合收集的元素的数据类型为：键值对 --> Map.Entry<K,V>   即将键和值包装为固定的对象
拥有HashMap类中需要传递函数式接口的所有方法，不过，这些方法使用的式 Map 类的默认方法，即
HashMap类有覆盖Map类的这些方法，而HashSet类没有覆盖，使用的是默认方法。
此外根据根据HashSet的自动排序的特点，增加你一些更排序有关的方法：

1. 大于或等于给定键的最小值键
ceilingEntry(K key)：返回符合要求的键对应的映射
ceilingKey(K key)：返回符合要求的键

2. 返回逆序，与比较器有关；注意放回值为Navigablexxx<T>实例，注意不能强制类型转换。
NavigableSet<K> descendingKeySet()：返回此地图中包含的键的 相反顺序 NavigableSet 。
NavigableMap<K,V> descendingMap()：返回此映射中包含的映射的反向排序视图。

3.查找方法
boolean containsKey(Object key)：如果此映射包含指定键的映射，则返回 true 。
boolean containsValue(Object value)：如果此地图将一个或多个键映射到指定值，则返回 true 。

4. 返回Map.Entry视图对象的方法：注意，此类型是接口，即一般不必实例这样的对象，由Map包装的这个对象是一个比较完整的对象
为我们提供几个可用的方法：且其toString方法返回：key=value格式字符串。
boolean equals(Object o): 将指定的对象与此条目进行比较以获得相等性。
K getKey()：返回与此条目相对应的键。
V getValue(): 返回与此条目相对应的值。
int hashCode()：返回此映射条目的哈希码值。
V setValue(V value)：用指定的值替换与该条目相对应的值（可选操作）。
////////////////////
 ceilingEntry(K key)：返回与大于或等于给定键的最小键相关联的键值映射，如果没有此键，则 null 。
 Set<Map.Entry<K,V>> entrySet()：返回此地图中包含的映射的Set视图。
 firstEntry()：返回与该地图中的最小键相关联的键值映射，如果地图为空，则返回 null。
 floorEntry(K key)：返回与小于或等于给定键的最大键相关联的键值映射，如果没有此键，则 null 。

 5.



